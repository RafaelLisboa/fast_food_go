// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: token.sql

package db

import (
	"context"
)

const createRefreshToken = `-- name: CreateRefreshToken :exec
INSERT INTO refresh_tokens (user_id, token, expires_at) VALUES ($1, $2, $3)
`

type CreateRefreshTokenParams struct {
	UserID    string
	Token     string
	ExpiresAt int32
}

func (q *Queries) CreateRefreshToken(ctx context.Context, arg CreateRefreshTokenParams) error {
	_, err := q.db.ExecContext(ctx, createRefreshToken, arg.UserID, arg.Token, arg.ExpiresAt)
	return err
}

const getRefreshToken = `-- name: GetRefreshToken :one
SELECT token FROM refresh_tokens WHERE token = $1
`

func (q *Queries) GetRefreshToken(ctx context.Context, token string) (string, error) {
	row := q.db.QueryRowContext(ctx, getRefreshToken, token)
	err := row.Scan(&token)
	return token, err
}
